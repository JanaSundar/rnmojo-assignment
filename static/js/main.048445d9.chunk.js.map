{"version":3,"sources":["Utils/index.js","Components/Users.js","Components/Loader.js","Components/Logo.js","Components/Container.js","Components/Home.js","Components/Comments.js","Components/Post.js","Components/Card.js","Components/Posts.js","Components/NotFound.js","App.js","index.js"],"names":["BASE_URL","fetcher","a","axios","get","data","Error","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","Columns","Header","accessor","disableFilters","width","Cell","row","to","values","id","Users","columns","useMemo","useTable","defaultColumn","Filter","useFilters","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","i","getRowProps","cells","cell","getCellProps","Loader","Logo","props","height","fill","xmlns","d","Container","children","style","borderBottom","color","Home","useSWR","userData","Comment","comment","name","body","Comments","comments","Post","useParams","postid","history","useHistory","useState","setComments","loading","setLoading","fetchComments","commentsData","console","error","deletePost","delete","push","onClick","goBack","title","disabled","Card","post","substr","pathname","state","FilteredPost","setValue","filteredData","filter","toLowerCase","includes","type","Posts","NotFound","options","animationData","AnimationData","loop","autoplay","View","useLottie","App","path","exact","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.048445d9.chunk.js","sourcesContent":["import axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nconst fetcher = async (...args) => {\n  try {\n    const { data } = await axios.get(...args);\n    return data;\n  } catch (err) {\n    throw new Error('An error occurred while fetching the data.');\n  }\n};\n\nconst DefaultColumnFilter = ({\n  column: { filterValue, preFilteredRows, setFilter },\n}) => {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n};\n\nconst Columns = [\n  {\n    Header: 'S No',\n    accessor: 'id',\n    disableFilters: true,\n    width: 20,\n  },\n  {\n    Header: 'Name',\n    accessor: 'name',\n  },\n  {\n    Header: 'Company',\n    accessor: 'company.name',\n  },\n  {\n    Header: 'Posts',\n    accessor: 'posts',\n    Cell: ({ row }) => <Link to={`/posts/${row.values.id}`}>View Posts</Link>,\n    disableFilters: true,\n  },\n];\n\nexport { Columns, fetcher, BASE_URL, DefaultColumnFilter };\n","import React, { useMemo } from 'react';\nimport { useFilters, useTable } from 'react-table';\nimport { Columns, DefaultColumnFilter } from '../Utils';\n\nconst Users = ({ data }) => {\n  const columns = useMemo(() => Columns, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: { Filter: DefaultColumnFilter },\n    },\n    useFilters\n  );\n\n  return (\n    <div className=\"table-container\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"bouncing-loader\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","function Logo(props) {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M20 11.582c-2.91 0-5.622.88-7.868 2.382V3.499C12.132 1.566 10.785 0 8.854 0c-1.932 0-3.06 1.566-3.06 3.499V25.79C5.794 33.637 12.154 40 20 40c7.841 0 14.208-6.363 14.208-14.21C34.206 17.945 27.84 11.582 20 11.582zm0 22.078a7.869 7.869 0 01-7.868-7.87A7.867 7.867 0 0120 17.923a7.869 7.869 0 110 15.737z\"\n        fill=\"#6246EA\"\n      />\n    </svg>\n  );\n}\nexport default Logo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logo from './Logo';\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container\">\n      <Link to=\"/\" className=\"logo\" style={{ borderBottom: 'none' }}>\n        <Logo />\n        <h2 style={{ color: 'var(--lightbk)' }}>RMBlog</h2>\n      </Link>\n\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import { useMemo } from 'react';\nimport useSWR from 'swr';\nimport { BASE_URL, fetcher } from '../Utils';\nimport Users from './Users';\nimport Loader from './Loader';\nimport Container from './Container';\n\nconst Home = () => {\n  const { data } = useSWR(`${BASE_URL}/users`, fetcher);\n  const userData = useMemo(() => data, [data]);\n\n  return (\n    <Container>{!data ? <Loader /> : <Users data={userData} />}</Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Comment = ({ comment }) => {\n\n  return <div className=\"comment\">\n    <h4>{comment.name}</h4>\n    <p>{comment.body}</p>\n  </div>;\n};\n\nconst Comments = ({ comments }) => {\n  return (\n    <>\n      {comments.map((comment) => (\n        <Comment key={comment.id} {...{ comment }} />\n      ))}\n    </>\n  );\n};\n\nexport default Comments;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { BASE_URL, fetcher } from '../Utils';\nimport Container from './Container';\nimport Loader from './Loader';\nimport Comments from './Comments';\n\nconst Post = () => {\n  const { postid, id } = useParams();\n  const history = useHistory();\n  const { data } = useSWR(`${BASE_URL}/posts/${postid}`, fetcher);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchComments = async () => {\n    try {\n      setLoading(true);\n      const { data: commentsData } = await axios.get(\n        `${BASE_URL}/posts/${postid}/comments`\n      );\n      setComments(commentsData);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      console.error(err);\n    }\n  };\n\n  const deletePost = async () => {\n    try {\n      await axios.delete(`${BASE_URL}/posts/${postid}`);\n      history.push(`/posts/${id}`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Container>\n      <button onClick={() => history.goBack()} className=\"btn\">\n        Back\n      </button>\n      {!data ? (\n        <Loader />\n      ) : (\n        <div className=\"posts\">\n          <div className=\"card\">\n            <button className=\"delete\" onClick={deletePost}>\n              Delete\n            </button>\n            <h4>{data.title}</h4>\n            <p>{data.body}</p>\n\n            {comments.length > 0 ? (\n              <>\n                <h3\n                  style={{\n                    color: 'var(--button)',\n                  }}\n                >\n                  Comments\n                </h3>\n                <Comments {...{ comments }} />\n              </>\n            ) : (\n              <button\n                className=\"btn\"\n                onClick={fetchComments}\n                disabled={loading}\n              >\n                Show Comments\n              </button>\n            )}\n\n            {loading && <Loader />}\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nconst Card = ({ post }) => {\n  const { id } = useParams();\n  return (\n    <div className=\"card\">\n      <h4>{post.title}</h4>\n      <p>{post.body.substr(0, 100)}...</p>\n      <Link\n        to={{\n          pathname: `/posts/${id}/${post.id}`,\n          state: post,\n        }}\n        className=\"btn\"\n      >\n        View Post\n      </Link>\n    </div>\n  );\n};\n\nexport default Card;\n","import useSWR from 'swr';\nimport { useParams } from 'react-router-dom';\nimport { BASE_URL, fetcher } from '../Utils';\nimport Card from './Card';\nimport Container from './Container';\nimport Loader from './Loader';\nimport { useMemo, useState } from 'react';\n\nconst FilteredPost = ({ data }) => {\n  const [value, setValue] = useState('');\n  const filteredData = useMemo(() => {\n    if (!value) return data;\n    return data.filter((post) => {\n      return post.title.toLowerCase().includes(value);\n    });\n  }, [value, data]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        className=\"search\"\n        placeholder=\"search posts\"\n      />\n      <div className=\"posts\">\n        {filteredData.map((post) => (\n          <Card key={post.id} post={post} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst Posts = () => {\n  const { id } = useParams();\n  const { data } = useSWR(`${BASE_URL}/posts?userId=${id}`, fetcher);\n\n  return (\n    <Container>{!data ? <Loader /> : <FilteredPost {...{ data }} />}</Container>\n  );\n};\n\nexport default Posts;\n","import { useLottie } from 'lottie-react';\nimport { Link } from 'react-router-dom';\nimport AnimationData from '../Assets/404-page.json';\n\nconst NotFound = () => {\n  const options = {\n    animationData: AnimationData,\n    loop: true,\n    autoplay: true,\n  };\n\n  const style = {\n    height: 500,\n    width: 500,\n  };\n\n  const { View } = useLottie(options, style);\n\n  return (\n    <div className=\"container\">\n      {View}\n      <Link to=\"/\" className=\"btn\">Home</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home';\nimport Post from './Components/Post';\nimport Posts from './Components/Posts';\nimport NotFound from './Components/NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/posts/:id\" exact component={Posts} />\n        <Route path=\"/posts/:id/:postid\" component={Post} />\n        <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}